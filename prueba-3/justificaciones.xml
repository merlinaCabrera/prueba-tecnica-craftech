<?xml version="1.0" encoding="UTF-8"?>
<indexing>
 <object alt="" name="Imagen1" object_type="graphic"/>
 <paragraph index="12" node_type="writer">Prueba 3</paragraph>
 <paragraph index="13" node_type="writer">CI/CD</paragraph>
 <paragraph index="14" node_type="writer">El código de automatización esta organizado en  workflows, es decir, archivos YAML (dentro del repositorio se trata del directorio .github/workflows) donde se definen los pasos automatizados que definen cómo construir, probar y desplegar la aplicación, en este caso se utiliza un pipeline CI/CD.</paragraph>
 <paragraph index="16" node_type="writer">Para automatizar el flujo de trabajo se utilizó GitHub Actions, aprovechando el repositorio de GitHub creado para alojar las pruebas 1 y 2. Por otro lado, para la construcción de la imagen se utilizó docker-compose, ya que es una página simple y no se requiere funcionalidades avanzadas.</paragraph>
 <paragraph index="18" node_type="writer">El archivo ci-cd.yml alojado en el directorio mencionado previamente implementa el pipeline. </paragraph>
 <paragraph index="19" node_type="writer">Son dos los eventos que disparan el workflow,</paragraph>
 <paragraph index="20" node_type="writer">Push a la rama principal</paragraph>
 <paragraph index="21" node_type="writer">Pull request a la rama principal</paragraph>
 <paragraph index="22" node_type="writer">Trabajos definidos dentro del código que conforman el pipeline,</paragraph>
 <paragraph index="23" node_type="writer">Construcción de imagen Docker y subirla a DockerHub</paragraph>
 <paragraph index="24" node_type="writer">Despliegue de la aplicación usando docker-compose (si el evento es un push)</paragraph>
 <paragraph index="25" node_type="writer">Pruebas automatizadas</paragraph>
 <paragraph index="26" node_type="writer">* Aprobación manual antes de desplegar a producción
* Nota: en cuanto a interacción y chequeo previo a desplegar a producción, también podría agregarse un mensaje de notificación de resultado del pipeline.</paragraph>
 <paragraph index="29" node_type="writer">Cuando se realizan cambios en el repositorio (por ejemplo, push) se observan comportamientos en la sección Actions, de cada acción muestra alertas o errores. Por ejemplo,</paragraph>
 <paragraph index="49" node_type="writer">Parece que hubo un problema con el push de la imagen a DockerHub. No pude solucionar esto, DOCKER_USERNAME y DOCKER_PASSWORD están definidas correctamente en Secrets.</paragraph>
</indexing>
